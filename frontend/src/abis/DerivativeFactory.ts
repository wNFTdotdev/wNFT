export const DerivativeFactoryAbi = [
  {
    type: 'constructor',
    inputs: [
      { name: 'vaultFactory_', type: 'address', internalType: 'contract wNFTFactory' },
      { name: 'hook_', type: 'address', internalType: 'contract wNFTHook' },
      { name: 'owner_', type: 'address', internalType: 'address' },
    ],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'TICK_SPACING',
    inputs: [],
    outputs: [{ name: '', type: 'int24', internalType: 'int24' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'VAULT_FACTORY',
    inputs: [],
    outputs: [{ name: '', type: 'address', internalType: 'contract wNFTFactory' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'HOOK',
    inputs: [],
    outputs: [{ name: '', type: 'address', internalType: 'contract wNFTHook' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'POOL_MANAGER',
    inputs: [],
    outputs: [{ name: '', type: 'address', internalType: 'contract IPoolManager' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'createVaultForCollection',
    inputs: [
      { name: 'collection', type: 'address', internalType: 'address' },
      { name: 'sqrtPriceX96', type: 'uint160', internalType: 'uint160' },
    ],
    outputs: [
      { name: 'vault', type: 'address', internalType: 'address' },
      { name: 'poolId', type: 'bytes32', internalType: 'PoolId' },
    ],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'createDerivative',
    inputs: [
      {
        name: 'params',
        type: 'tuple',
        internalType: 'struct DerivativeFactory.DerivativeParams',
        components: [
          { name: 'parentCollection', type: 'address', internalType: 'address' },
          { name: 'nftName', type: 'string', internalType: 'string' },
          { name: 'nftSymbol', type: 'string', internalType: 'string' },
          { name: 'nftBaseUri', type: 'string', internalType: 'string' },
          { name: 'nftOwner', type: 'address', internalType: 'address' },
          { name: 'initialMinter', type: 'address', internalType: 'address' },
          { name: 'fee', type: 'uint24', internalType: 'uint24' },
          { name: 'sqrtPriceX96', type: 'uint160', internalType: 'uint160' },
          { name: 'maxSupply', type: 'uint256', internalType: 'uint256' },
          { name: 'tickLower', type: 'int24', internalType: 'int24' },
          { name: 'tickUpper', type: 'int24', internalType: 'int24' },
          { name: 'liquidity', type: 'uint128', internalType: 'uint128' },
          { name: 'parentTokenContribution', type: 'uint256', internalType: 'uint256' },
          { name: 'derivativeTokenRecipient', type: 'address', internalType: 'address' },
          { name: 'parentTokenRefundRecipient', type: 'address', internalType: 'address' },
          { name: 'salt', type: 'bytes32', internalType: 'bytes32' },
        ],
      },
    ],
    outputs: [
      { name: 'nft', type: 'address', internalType: 'address' },
      { name: 'vault', type: 'address', internalType: 'address' },
      { name: 'childPoolId', type: 'bytes32', internalType: 'PoolId' },
    ],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'derivativeForVault',
    inputs: [{ name: 'vault', type: 'address', internalType: 'address' }],
    outputs: [
      {
        name: '',
        type: 'tuple',
        internalType: 'struct DerivativeFactory.DerivativeInfo',
        components: [
          { name: 'nft', type: 'address', internalType: 'address' },
          { name: 'parentVault', type: 'address', internalType: 'address' },
          { name: 'poolId', type: 'bytes32', internalType: 'PoolId' },
        ],
      },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'vaultForNft',
    inputs: [{ name: 'nft', type: 'address', internalType: 'address' }],
    outputs: [{ name: '', type: 'address', internalType: 'address' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'owner',
    inputs: [],
    outputs: [{ name: '', type: 'address', internalType: 'address' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'transferOwnership',
    inputs: [{ name: 'newOwner', type: 'address', internalType: 'address' }],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'event',
    name: 'RootPoolRegistered',
    inputs: [
      { name: 'parentVault', type: 'address', indexed: true, internalType: 'address' },
      { name: 'poolId', type: 'bytes32', indexed: true, internalType: 'PoolId' },
      { name: 'fee', type: 'uint24', indexed: false, internalType: 'uint24' },
      { name: 'tickSpacing', type: 'int24', indexed: false, internalType: 'int24' },
      { name: 'sqrtPriceX96', type: 'uint160', indexed: false, internalType: 'uint160' },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'DerivativeCreated',
    inputs: [
      { name: 'parentCollection', type: 'address', indexed: true, internalType: 'address' },
      { name: 'parentVault', type: 'address', indexed: true, internalType: 'address' },
      { name: 'derivativeNft', type: 'address', indexed: true, internalType: 'address' },
      { name: 'derivativeVault', type: 'address', indexed: false, internalType: 'address' },
      { name: 'childPoolId', type: 'bytes32', indexed: false, internalType: 'PoolId' },
      { name: 'fee', type: 'uint24', indexed: false, internalType: 'uint24' },
      { name: 'tickSpacing', type: 'int24', indexed: false, internalType: 'int24' },
      { name: 'sqrtPriceX96', type: 'uint160', indexed: false, internalType: 'uint160' },
    ],
    anonymous: false,
  },
] as const;
